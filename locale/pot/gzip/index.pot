# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, Doug Hellmann
# This file is distributed under the same license as the PyMOTW-3 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyMOTW-3 \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-03-24 20:15-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/gzip/index.rst:3
# 04775c138e7f42cc88865636e90c721e
msgid "gzip --- Read and Write GNU zip Files"
msgstr ""

#: ../../source/gzip/index.rst:8
# 0589d7a539d84e41b07fe7b16adeb3a1
msgid "Read and write gzip files."
msgstr ""

#: ../../source/gzip/index.rst:10
# b494c4a3e354434b9520dbd87b57556d
msgid "The ``gzip`` module provides a file-like interface to GNU zip files, using :mod:`zlib` to compress and uncompress the data."
msgstr ""

#: ../../source/gzip/index.rst:14
# d8764b914aa14939a03a0ee95ae69fc5
msgid "Writing Compressed Files"
msgstr ""

#: ../../source/gzip/index.rst:16
# d99de4d300034ba18992399ec8b6923e
msgid "The module-level function ``open()`` creates an instance of the file-like class ``GzipFile``.  The usual methods for writing and reading bytes are provided."
msgstr ""

#: ../../source/gzip/index.rst:0
# 792c3ae0532948a0a65d43683b4e5ff6
msgid "gzip_write.py"
msgstr ""

#: ../../source/gzip/index.rst:24
# 64bc0cb3fb4e4ef682fdff18f6cf051f
msgid "To write data into a compressed file, open the file with mode ``'wb'``. This example wraps the ``GzipFile`` with a ``TextIOWrapper`` from the :mod:`io` module to encode Unicode text to bytes suitable for compression."
msgstr ""

#: ../../source/gzip/index.rst:42
# d439be69647645c885968ae49148cb91
msgid "Different amounts of compression can be used by passing a ``compresslevel`` argument.  Valid values range from 0 to 9, inclusive. Lower values are faster and result in less compression.  Higher values are slower and compress more, up to a point."
msgstr ""

#: ../../source/gzip/index.rst:0
# 44463be845544966a4590cab1a8bf222
msgid "gzip_compresslevel.py"
msgstr ""

#: ../../source/gzip/index.rst:51
# 6eb4c8de8d2c4ac9b8b11208009a8b75
msgid "The center column of numbers in the output shows the size in bytes of the files produced by compressing the input.  For this input data, the higher compression values do not necessarily pay off in decreased storage space.  Results will vary, depending on the input data."
msgstr ""

#: ../../source/gzip/index.rst:80
# 579da27e049447d7bf062386c997aaf3
msgid "A ``GzipFile`` instance also includes a ``writelines()`` method that can be used to write a sequence of strings."
msgstr ""

#: ../../source/gzip/index.rst:0
# 08ec5481e1a847959c52cddcad07fe40
msgid "gzip_writelines.py"
msgstr ""

#: ../../source/gzip/index.rst:87
# 68754f21ce3f4c68b7370eda29492107
msgid "As with a regular file, the input lines need to include a newline character."
msgstr ""

#: ../../source/gzip/index.rst:113
# 5a269a12bd5c45feaa50e06e6ac67c38
msgid "Reading Compressed Data"
msgstr ""

#: ../../source/gzip/index.rst:115
# d8c5fc086dce40088b97ccda36250275
msgid "To read data back from previously compressed files, open the file with binary read mode (``'rb'``) so no text-based translation of line endings or Unicode decoding is performed."
msgstr ""

#: ../../source/gzip/index.rst:0
# ecb17297a5e74654a2f38318608d27c2
msgid "gzip_read.py"
msgstr ""

#: ../../source/gzip/index.rst:123
# a0790c36457e4756a73c28513b5feafe
msgid "This example reads the file written by ``gzip_write.py`` from the previous section, using a ``TextIOWrapper`` to decode the text after it is decompressed."
msgstr ""

#: ../../source/gzip/index.rst:140
# ca3c9782698440edb3ca8d186517a2fb
msgid "While reading a file, it is also possible to seek and read only part of the data."
msgstr ""

#: ../../source/gzip/index.rst:0
# 3d579e0e31ea4219a8f41860e6ea400f
msgid "gzip_seek.py"
msgstr ""

#: ../../source/gzip/index.rst:147
# e3570396bccb4ae1a7fdfd901b741986
msgid "The ``seek()`` position is relative to the *uncompressed* data, so the caller does not need to know that the data file is compressed."
msgstr ""

#: ../../source/gzip/index.rst:169
# ec6dc92826734fbb98ea219f397e8206
msgid "Working with Streams"
msgstr ""

#: ../../source/gzip/index.rst:171
# 76248fae4bb545ddaf6def2756cf6dce
msgid "The ``GzipFile`` class can be used to wrap other types of data streams so they can use compression as well.  This is useful when the data is being transmitted over a socket or an existing (already open) file handle.  A :mod:`BytesIO` buffer can also be used."
msgstr ""

#: ../../source/gzip/index.rst:0
# 878891cac8e34ca9816b2b65fc8cc551
msgid "gzip_BytesIO.py"
msgstr ""

#: ../../source/gzip/index.rst:181
# afe2135a861145ce80e38ac811cfddaa
msgid "One benefit of using ``GzipFile`` over :mod:`zlib` is that it supports the file API.  However, when re-reading the previously compressed data, an explicit length is passed to ``read()``. Leaving the length off resulted in a CRC error, possibly because ``BytesIO`` returned an empty string before reporting EOF.  When working with streams of compressed data, either prefix the data with an integer representing the actual amount of data to be read or use the incremental decompression API in :mod:`zlib`."
msgstr ""

#: ../../source/gzip/index.rst:220
# c374731973b34d13be58e3907c5dfb17
msgid ":pydoc:`gzip`"
msgstr ""

#: ../../source/gzip/index.rst:222
# c24a36965d754c628c619b78436be70e
msgid ":mod:`zlib` -- The ``zlib`` module is a lower-level interface to gzip compression."
msgstr ""

#: ../../source/gzip/index.rst:225
# 46390fb34f724004b059e7a55be2e129
msgid ":mod:`zipfile` -- The ``zipfile`` module gives access to ZIP archives."
msgstr ""

#: ../../source/gzip/index.rst:228
# e5e29ced1e254bf5bc3076f69c0ca698
msgid ":mod:`bz2` -- The ``bz2`` module uses the bzip2 compression format."
msgstr ""

#: ../../source/gzip/index.rst:231
# cfafe0e85f5143d9a447120b66a9430b
msgid ":mod:`tarfile` -- The ``tarfile`` module includes built-in support for reading compressed tar archives."
msgstr ""

#: ../../source/gzip/index.rst:234
# a4d5bc0e34304c8e95c1ee7c16a25194
msgid ":mod:`io` -- Building-blocks for creating input and output pipelines."
msgstr ""

