# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, Doug Hellmann
# This file is distributed under the same license as the PyMOTW-3 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyMOTW-3 \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-03-24 20:15-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/sys/exceptions.rst:5
# b53ca468eb8d45f68c72c32e936381fd
msgid "Exception Handling"
msgstr ""

#: ../../source/sys/exceptions.rst:7
# 37108cc96492462d9e0e875196cf4b6b
msgid "``sys`` includes features for trapping and working with exceptions."
msgstr ""

#: ../../source/sys/exceptions.rst:12
# ba21fea784f14ac7a78c79bceb44a7a3
msgid "Unhandled Exceptions"
msgstr ""

#: ../../source/sys/exceptions.rst:14
# 39b2b39c938c4423937e36d275955605
msgid "Many applications are structured with a main loop that wraps execution in a global exception handler to trap errors not handled at a lower level.  Another way to achieve the same thing is by setting the ``sys.excepthook`` to a function that takes three arguments (the error type, error value, and traceback) and let it deal with unhandled errors."
msgstr ""

#: ../../source/sys/exceptions.rst:0
# 1b0508a83d344e5bba4112530d5201e1
msgid "sys_excepthook.py"
msgstr ""

#: ../../source/sys/exceptions.rst:25
# 8ff4aa35ce904965babd46d4abe90d7b
msgid "Since there is no ``try:except`` block around the line where the exception is raised the following call to ``print()`` is not run, even though the except hook is set."
msgstr ""

#: ../../source/sys/exceptions.rst:45
# a969f5381e0a4b80afa976e370f18fd4
msgid "Current Exception"
msgstr ""

#: ../../source/sys/exceptions.rst:47
# bd03899878a2494894e1dac986164a4e
msgid "There are times when an explicit exception handler is preferred, either for code clarity or to avoid conflicts with libraries that try to install their own ``excepthook``.  In these cases, a common handler function can be created that does not need to have the exception object passed to it explicitly by calling ``exc_info()`` to retrieve the current exception for a thread."
msgstr ""

#: ../../source/sys/exceptions.rst:54
# 13a1c618e4bd4723bbab72abb0b764a8
msgid "The return value of ``exc_info()`` is a three member tuple containing the exception class, an exception instance, and a traceback.  Using ``exc_info()`` is preferred over the old form (with ``exc_type``, ``exc_value``, and ``exc_traceback``) because it is thread-safe."
msgstr ""

#: ../../source/sys/exceptions.rst:0
# 17aca6e085114a6097a9e55d2062d97d
msgid "sys_exc_info.py"
msgstr ""

#: ../../source/sys/exceptions.rst:64
# ce3c0fe0bfd74f1882fa71cad43c673f
msgid "This example avoids introducing a circular reference between the traceback object and a local variable in the current frame by ignoring that part of the return value from ``exc_info()``.  If the traceback is needed (for example, so it can be logged), explicitly delete the local variable (using ``del``) to avoid cycles."
msgstr ""

#: ../../source/sys/exceptions.rst:87
# 9c7e3d980f184831a46a7d0d0e0ab7e8
msgid "Previous Interactive Exception"
msgstr ""

#: ../../source/sys/exceptions.rst:89
# 8d983ceffb964fa4ab19ced93c304ddb
msgid "In the interactive interpreter, there is only one thread of interaction.  Unhandled exceptions in that thread are saved to three variables in ``sys`` (``last_type``, ``last_value``, and ``last_traceback``) to make it easy to retrieve them for debugging.  Using the postmortem debugger in :mod:`pdb` avoids any need to use the values directly."
msgstr ""

#: ../../source/sys/exceptions.rst:121
# fdf41ad8e9fa45feb41672fab2abcf29
msgid ":mod:`exceptions` -- Built-in errors"
msgstr ""

#: ../../source/sys/exceptions.rst:123
# d1c15522d75640d1bd2271555b4708bb
msgid ":mod:`pdb` -- Python debugger"
msgstr ""

#: ../../source/sys/exceptions.rst:125
# c0e6e94e38304ed0bf950e6c44a7db4b
msgid ":mod:`traceback` -- Module for working with tracebacks"
msgstr ""

