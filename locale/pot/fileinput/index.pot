# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, Doug Hellmann
# This file is distributed under the same license as the PyMOTW-3 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyMOTW-3 \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-03-24 20:15-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/fileinput/index.rst:3
# a3d6e17af3da4f45a0cbd42ff8e02617
msgid "fileinput --- Command-Line Filter Framework"
msgstr ""

#: ../../source/fileinput/index.rst:8
# 8f115ae71125479a813e0f89626a3fad
msgid "Create command-line filter programs to process lines from input streams."
msgstr ""

#: ../../source/fileinput/index.rst:10
# 46e3c8bdce7043ef830870992cebde62
msgid "The ``fileinput`` module is a framework for creating command-line programs for processing text files as a filter."
msgstr ""

#: ../../source/fileinput/index.rst:14
# 691538e9eabd49d6a2aa79b95f61ec44
msgid "Converting M3U files to RSS"
msgstr ""

#: ../../source/fileinput/index.rst:16
# cbbfa618e34d43079963ada5f62f2b5b
msgid "An example of a filter is m3utorss_, a program to convert a set of MP3 files into an RSS feed that can be shared as a podcast.  The inputs to the program are one or more m3u files listing the MP3 files to be distributed. The output is an RSS feed printed to the console. To process the input, the program needs to iterate over the list of filenames and"
msgstr ""

#: ../../source/fileinput/index.rst:23
# ef990be513ff4037bce685b80376a0bf
msgid "Open each file."
msgstr ""

#: ../../source/fileinput/index.rst:24
# 6a7a794f7fd246fa836b99bec49954c5
msgid "Read each line of the file."
msgstr ""

#: ../../source/fileinput/index.rst:25
# c0ea037064d3405cbf9732bdda6ce8a1
msgid "Figure out if the line refers to an mp3 file."
msgstr ""

#: ../../source/fileinput/index.rst:26
# 9faaa52bf62f4e22abdc2bde4c2818a6
msgid "If it does, add a new item to the RSS feed."
msgstr ""

#: ../../source/fileinput/index.rst:27
# 90b4942694bf432b971a6de7bc174378
msgid "Print the output."
msgstr ""

#: ../../source/fileinput/index.rst:29
# 8c14481af7584099bb62a5fb8a49fc5e
msgid "All of this file handling could have been coded by hand. It is not that complicated and, with some testing, even the error handling would be right. But ``fileinput`` handles all of the details, so the program is simplified."
msgstr ""

#: ../../source/fileinput/index.rst:37
# c9e041bd97c943558c61432785b7cdb7
msgid "The ``input()`` function takes as argument a list of filenames to examine. If the list is empty, the module reads data from standard input. The function returns an iterator that produces individual lines from the text files being processed.  The caller just needs to loop over each line, skipping blanks and comments, to find the references to MP3 files."
msgstr ""

#: ../../source/fileinput/index.rst:44
# 5bbccf0ae2fe41e284301a3a21314219
msgid "Here is the complete program."
msgstr ""

#: ../../source/fileinput/index.rst:0
# 54b68de20b804c038bf99e8b3b1383c7
msgid "fileinput_example.py"
msgstr ""

#: ../../source/fileinput/index.rst:50
# d7e2bff37d154d98a3640f6093124a59
msgid "This sample input file contains the names of several MP3 files."
msgstr ""

#: ../../source/fileinput/index.rst:0
# fa45fabd6aca4c6da886eb8560b15521
msgid "sample_data.m3u"
msgstr ""

#: ../../source/fileinput/index.rst:55
# fc523203987b400da0dce7a17ebf0c72
msgid "Running ``fileinput_example.py`` with the sample input produces XML data using the RSS format."
msgstr ""

#: ../../source/fileinput/index.rst:88
# a8c90ecec81444a7966c9901242bfc5b
msgid "Progress Metadata"
msgstr ""

#: ../../source/fileinput/index.rst:90
# 3ae37e736e7a4eaab88661a69329907b
msgid "In the previous example, the filename and line number being processed were not important. Other tools, such as grep-like searching, might need that information. ``fileinput`` includes functions for accessing all of the metadata about the current line (``filename()``, ``filelineno()``, and ``lineno()``)."
msgstr ""

#: ../../source/fileinput/index.rst:0
# e30b9e83436f405caa3f35542bf2c90f
msgid "fileinput_grep.py"
msgstr ""

#: ../../source/fileinput/index.rst:100
# 2b0406c739454118b16dd5c7580b2f13
msgid "A basic pattern matching loop can be used to find the occurrences of the string ``\"fileinput\"`` in the source for these examples."
msgstr ""

#: ../../source/fileinput/index.rst:135
# 561a6504b6a64bc79130031ef5e53ed1
msgid "Text can also be read from standard input."
msgstr ""

#: ../../source/fileinput/index.rst:165
# 8c189ab16ccd4945b009c618af39505f
msgid "In-place Filtering"
msgstr ""

#: ../../source/fileinput/index.rst:167
# f0400cb3ed8e4516a772fdab4f789a71
msgid "Another common file-processing operation is to modify the contents of a file where it is, rather than making a new file.  For example, a Unix hosts file might need to be updated if a subnet range changes."
msgstr ""

#: ../../source/fileinput/index.rst:0
# e003b8c0b5634a1795635407931df8dc
msgid "etc_hosts.txt before modifications"
msgstr ""

#: ../../source/fileinput/index.rst:174
# 51998658b32c476eb42c915c04d72a03
msgid "The safe way to make the change automatically is to create a new file based on the input and then replace the original with the edited copy. ``fileinput`` supports this automatically using the ``inplace`` option."
msgstr ""

#: ../../source/fileinput/index.rst:0
# ca5f7873cee44641826696b20f5d6ab2
msgid "fileinput_change_subnet.py"
msgstr ""

#: ../../source/fileinput/index.rst:183
# 7b40c3f390224f769253c1400ff1280a
msgid "Although the script uses ``print()``, no output is produced because ``fileinput`` redirects standard output to the file being overwritten."
msgstr ""

#: ../../source/fileinput/index.rst:199
# 7289eff9095846fdb047fafef57fdf9a
msgid "The updated file has the changed IP addresses of all of the servers on the ``10.16.0.0/16`` network."
msgstr ""

#: ../../source/fileinput/index.rst:0
# b70fab2305d7426897077ce28e41fea1
msgid "etc_hosts.txt after modifications"
msgstr ""

#: ../../source/fileinput/index.rst:205
# cdef913180f34a7687b260e0ec719bd5
msgid "Before processing begins, a backup file is created using the original name plus ``.bak``."
msgstr ""

#: ../../source/fileinput/index.rst:0
# daa8ca89a0f945398c757c07eea144df
msgid "fileinput_change_subnet_noisy.py"
msgstr ""

#: ../../source/fileinput/index.rst:212
# 24044a8b5fcb4f1581b79265f44efb07
msgid "The backup file is removed when the input is closed."
msgstr ""

#: ../../source/fileinput/index.rst:234
# 9960968a40234d9fa3ab925f5c7db543
msgid ":pydoc:`fileinput`"
msgstr ""

#: ../../source/fileinput/index.rst:236
# 6bd4c6570299423fb62eecadc3288f47
msgid "m3utorss_ -- Script to convert m3u files listing MP3s to an RSS file suitable for use as a podcast feed."
msgstr ""

#: ../../source/fileinput/index.rst:239
# 169aa3a3d21e4e9facb48fdc58525a3f
msgid ":mod:`xml.etree` -- More details of using ElementTree to produce XML."
msgstr ""

