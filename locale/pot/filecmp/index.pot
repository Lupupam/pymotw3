# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, Doug Hellmann
# This file is distributed under the same license as the PyMOTW-3 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyMOTW-3 \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-03-24 20:15-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/filecmp/index.rst:3
# 2f8ccbe7598546dea110cdb9e1576c0a
msgid "filecmp --- Compare Files"
msgstr ""

#: ../../source/filecmp/index.rst:8
# 4a9d858f0aef4efb88677e9041eabf3a
msgid "Compare files and directories on the file system."
msgstr ""

#: ../../source/filecmp/index.rst:10
# eb50ca3fc199407fa450076beaee496c
msgid "The ``filecmp`` module includes functions and a class for comparing files and directories on the file system."
msgstr ""

#: ../../source/filecmp/index.rst:14
# f3e850692b084d98a7cbb6a918d36faa
msgid "Example Data"
msgstr ""

#: ../../source/filecmp/index.rst:16
# ac02d52f3ee54070b8260caa09884767
msgid "The examples in this discussion use a set of test files created by ``filecmp_mkexamples.py``."
msgstr ""

#: ../../source/filecmp/index.rst:0
# 4f94f9ec615847df9b7a353c6fb9bda8
msgid "filecmp_mkexamples.py"
msgstr ""

#: ../../source/filecmp/index.rst:33
# 43b2c76d81524102885f4196cdc75a70
msgid "Running the script produces a tree of files under the directory ``example``:"
msgstr ""

#: ../../source/filecmp/index.rst:90
# 655aa779a35f4e908db48008d92b004e
msgid "The same directory structure is repeated one time under the \"``common_dir``\" directories to give interesting recursive comparison options."
msgstr ""

#: ../../source/filecmp/index.rst:94
# 5ff4f7efde264d4ea13295754f4489e1
msgid "Comparing Files"
msgstr ""

#: ../../source/filecmp/index.rst:96
# 204716e6dd9c496885615b5cce25e44b
msgid "``cmp()`` compares two files on the file system."
msgstr ""

#: ../../source/filecmp/index.rst:0
# d147fc60c1c844feb97116a43de31281
msgid "filecmp_cmp.py"
msgstr ""

#: ../../source/filecmp/index.rst:102
# 0053f417c0284bcb9b2f94af71b758ed
msgid "The ``shallow`` argument tells ``cmp()`` whether to look at the contents of the file, in addition to its metadata. The default is to perform a shallow comparison using the information available from ``os.stat()``. If the stat results are the same, the files are considered the same so files of the same size created at the same time are reported as the same, even if their contents differ. When ``shallow`` is ``False``, the contents of the file are always compared."
msgstr ""

#: ../../source/filecmp/index.rst:124
# a369f00f54a543c8810f46f66bb5ca42
msgid "To compare a set of files in two directories without recursing, use ``cmpfiles()``. The arguments are the names of the directories and a list of files to be checked in the two locations. The list of common files passed in should contain only filenames (directories always result in a mismatch) and the files must be present in both locations. The next example shows a simple way to build the common list. The comparison also takes the ``shallow`` flag, just as with ``cmp()``."
msgstr ""

#: ../../source/filecmp/index.rst:0
# d8eb86953eed477f8967d45e9bf2d4dd
msgid "filecmp_cmpfiles.py"
msgstr ""

#: ../../source/filecmp/index.rst:136
# ca510d9d8fe0456fac0a486a52a69834
msgid "``cmpfiles()`` returns three lists of filenames containing files that match, files that do not match, and files that could not be compared (due to permission problems or for any other reason)."
msgstr ""

#: ../../source/filecmp/index.rst:157
# 0d33d93665a848e58172c33653986388
msgid "Comparing Directories"
msgstr ""

#: ../../source/filecmp/index.rst:159
# 5dfa9bf5e9ba4bd29ded634d67a6a0ac
msgid "The functions described earlier are suitable for relatively simple comparisons.  For recursive comparison of large directory trees or for more complete analysis, the ``dircmp`` class is more useful. In its simplest use case, ``report()`` prints a report comparing two directories."
msgstr ""

#: ../../source/filecmp/index.rst:0
# 366bdd2b7b434510b30c2420fe5ecd9a
msgid "filecmp_dircmp_report.py"
msgstr ""

#: ../../source/filecmp/index.rst:169
# e18ab16cc989414c81d6ec376a0897b0
msgid "The output is a plain-text report showing the results of just the contents of the directories given, without recursing. In this case, the file \"``not_the_same``\" is thought to be the same because the contents are not being compared. There is no way to have :mod:`dircmp` compare the contents of files like ``cmp()`` does."
msgstr ""

#: ../../source/filecmp/index.rst:192
# 958ad23b8c6e4b46933ad07c75472783
msgid "For more detail, and a recursive comparison, use ``report_full_closure()``:"
msgstr ""

#: ../../source/filecmp/index.rst:0
# 577f24163f554c028ae8fe8ac004ac5c
msgid "filecmp_dircmp_report_full_closure.py"
msgstr ""

#: ../../source/filecmp/index.rst:199
# e7c06a9631f7424898532c9222de0c11
msgid "The output includes comparisons of all parallel subdirectories."
msgstr ""

#: ../../source/filecmp/index.rst:248
# 9fa9acc257094a62827bf277d418b1df
msgid "Using Differences in a Program"
msgstr ""

#: ../../source/filecmp/index.rst:250
# 7e9cd988bf7c44bca70855d8fba6ba6c
msgid "Besides producing printed reports, ``dircmp`` calculates lists of files that can be used in programs directly. Each of the following attributes is calculated only when requested, so creating a ``dircmp`` instance does not incur overhead for unused data."
msgstr ""

#: ../../source/filecmp/index.rst:0
# fabdbe58907d4b88b8a9fe963cb18f65
msgid "filecmp_dircmp_list.py"
msgstr ""

#: ../../source/filecmp/index.rst:259
# 9de88ba2f3c44f4c96e4955720ec7757
msgid "The files and subdirectories contained in the directories being compared are listed in :attr:`left_list` and :attr:`right_list`."
msgstr ""

#: ../../source/filecmp/index.rst:288
# a78400cbfbab4ae19ae69736015ad0b6
msgid "The inputs can be filtered by passing a list of names to ignore to the constructor. By default the names ``RCS``, ``CVS``, and ``tags`` are ignored."
msgstr ""

#: ../../source/filecmp/index.rst:0
# 6bc4123af3fc472e984f4d68fa09d015
msgid "filecmp_dircmp_list_filter.py"
msgstr ""

#: ../../source/filecmp/index.rst:296
# eadbacd29db84137b8d614d88d8f1868
msgid "In this case, the \"``common_file``\" is left out of the list of files to be compared."
msgstr ""

#: ../../source/filecmp/index.rst:323
# 26956fc7202f41d9864a1527d3ae379a
msgid "The names of files common to both input directories are saved in :attr:`common`, and the files unique to each directory are listed in :attr:`left_only`, and :attr:`right_only`."
msgstr ""

#: ../../source/filecmp/index.rst:0
# 90b76ced676d459fb579bd6ac81aafff
msgid "filecmp_dircmp_membership.py"
msgstr ""

#: ../../source/filecmp/index.rst:331
# 7f85f2fff65147f49bea4fb8122d92cb
msgid "The \"left\" directory is the first argument to ``dircmp()`` and the \"right\" directory is the second."
msgstr ""

#: ../../source/filecmp/index.rst:353
# bb5060d5e9d841a99bdd6ee59230e965
msgid "The common members can be further broken down into files, directories and \"funny\" items (anything that has a different type in the two directories or where there is an error from ``os.stat()``)."
msgstr ""

#: ../../source/filecmp/index.rst:0
# fd53d2af002843c197d2ef23c5d4128b
msgid "filecmp_dircmp_common.py"
msgstr ""

#: ../../source/filecmp/index.rst:361
# 894e12acea29472ab5866b9dd35f7ce6
msgid "In the example data, the item named \"``file_in_dir1``\" is a file in one directory and a subdirectory in the other, so it shows up in the funny list."
msgstr ""

#: ../../source/filecmp/index.rst:387
# ca2acde6d18342c38d12f586531fa057
msgid "The differences between files are broken down similarly."
msgstr ""

#: ../../source/filecmp/index.rst:0
# e492f18af68146128201a0e669b5733e
msgid "filecmp_dircmp_diff.py"
msgstr ""

#: ../../source/filecmp/index.rst:393
# eef0b1f3baba4640977628d979e2a869
msgid "The file ``not_the_same`` is only being compared via ``os.stat()``, and the contents are not examined, so it is included in the :attr:`same_files` list."
msgstr ""

#: ../../source/filecmp/index.rst:411
# d7f31f2c1ea24c3ebfc2d22a6b9e1d2d
msgid "Finally, the subdirectories are also saved to allow easy recursive comparison."
msgstr ""

#: ../../source/filecmp/index.rst:0
# 5387f307486e466592b13c3a4f8e9545
msgid "filecmp_dircmp_subdirs.py"
msgstr ""

#: ../../source/filecmp/index.rst:418
# 3b6b9071eccc4df08adf7c27c535a1f8
msgid "The attribute :attr:`subdirs` is a dictionary mapping the directory name to new ``dircmp`` objects."
msgstr ""

#: ../../source/filecmp/index.rst:436
# b6e4bfb7bc714bca9b27a75fdf7b3a91
msgid ":pydoc:`filecmp`"
msgstr ""

#: ../../source/filecmp/index.rst:438
# 9b54bd9b46c54059b58260eb5155a460
msgid ":mod:`difflib` -- Computing the differences between two sequences."
msgstr ""

