# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, Doug Hellmann
# This file is distributed under the same license as the PyMOTW-3 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyMOTW-3 \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-03-24 20:15-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/asyncio/index.rst:3
# d870d32c00d24119a60a84a3044663ea
msgid "asyncio --- Asynchronous I/O, event loop, and concurrency tools"
msgstr ""

#: ../../source/asyncio/index.rst:8
# b8e6ac7f082e4315baa86416e7ef49d3
msgid "An asynchronous I/O and concurrency framework."
msgstr ""

#: ../../source/asyncio/index.rst:10
# f11feb00bac543f5875f5cef97f97b92
msgid "The ``asyncio`` module provides tools for building concurrent applications using coroutines. While the :mod:`threading` module implements concurrency through application threads and :mod:`multiprocessing` implements concurrency using system processes, ``asyncio`` uses a single-threaded, single-process approach in which parts of an application cooperate to switch tasks explicitly at optimal times. Most often this context switching occurs when the program would otherwise block waiting to read or write data, but ``asyncio`` also includes support for scheduling code to run at a specific future time, to enable one coroutine to wait for another to complete, for handling system signals, and for recognizing other events that may be reasons for an application to change what it is working on."
msgstr ""

#: ../../source/asyncio/index.rst:44
# 61c844636e15414788b566e2d39857c7
msgid "In Python 3.5, ``asyncio`` is still a *provisional* module. The API was stablized in Python 3.6, and most of the changes were backported to later patch releases of Python 3.5. As a result, the module may work slightly differently under different versions of Python 3.5."
msgstr ""

#: ../../source/asyncio/index.rst:63
# ef45e1b90095453cb893ba8edd4094fc
msgid ":pydoc:`asyncio`"
msgstr ""

#: ../../source/asyncio/index.rst:65
# 7d1efd4530a242ad990b9aae3be010b2
msgid ":pep:`3156` -- *Asynchronous IO Support Rebooted: the \"asyncio\" Module*"
msgstr ""

#: ../../source/asyncio/index.rst:68
# 3de984b1f89d48d5a1709139dc9ac3aa
msgid ":pep:`380` -- *Syntax for Delegating to a Subgenerator*"
msgstr ""

#: ../../source/asyncio/index.rst:70
# 7b16b3614fbe4b73afa146d261c5d6e8
msgid ":pep:`492` -- *Coroutines with async and await syntax*"
msgstr ""

#: ../../source/asyncio/index.rst:72
# e988c2bb203a42769f447da549d68483
msgid ":mod:`concurrent.futures` -- Manage Pools of Concurrent Tasks"
msgstr ""

#: ../../source/asyncio/index.rst:74
# d7d7eb49516a48489609b37d43590f80
msgid ":mod:`socket` -- Low-level network communication"
msgstr ""

#: ../../source/asyncio/index.rst:76
# 98b3613437f545f784a7f2a44df118de
msgid ":mod:`select` -- Low-level asynchronous I/O tools"
msgstr ""

#: ../../source/asyncio/index.rst:78
# 233db264422043d2b9d5fb5445bb2870
msgid ":mod:`socketserver` -- Framework for creating network servers"
msgstr ""

#: ../../source/asyncio/index.rst:80
# 57f913b366fe4702aa186be98c713e6c
msgid "`asyncio: What's New in Python 3.6 <https://docs.python.org/3/whatsnew/3.6.html#asyncio>`__ -- Summary of the changes to ``asyncio`` as the API stablized in Python 3.6."
msgstr ""

#: ../../source/asyncio/index.rst:85
# 7c02b7058bba47ae926b8ba02aa07149
msgid "`trollius <https://pypi.python.org/pypi/trollius>`__ -- A port of Tulip, the original version of asyncio, to Python 2."
msgstr ""

#: ../../source/asyncio/index.rst:88
# 8398e911cffd4c8abb74bf0f4ecaa658
msgid "`The New asyncio Module in Python 3.4: Event Loops <http://www.drdobbs.com/open-source/the-new-asyncio-module-in-python-34-even/240168401>`__ -- Article by Gast√≥n Hillar in Dr. Dobb's"
msgstr ""

#: ../../source/asyncio/index.rst:92
# ac34eea9b58b4cc4bd37d413bd5a7084
msgid "`Exploring Python 3's Asyncio by Example <http://www.giantflyingsaucer.com/blog/?p=5557>`__ -- Blog post by Chat Lung"
msgstr ""

#: ../../source/asyncio/index.rst:96
# 035129b227494aee84cfc8cf15d356fe
msgid "`A Web Crawler With asyncio Coroutines <http://aosabook.org/en/500L/a-web-crawler-with-asyncio-coroutines.html>`__ -- An article in *The Architecture of Open Source Applications* by A. Jesse Jiryu Davis and Guido van Rossum"
msgstr ""

#: ../../source/asyncio/index.rst:101
# 305fff0aa6a348949ad0875a89628fa0
msgid "`Playing with asyncio <http://www.getoffmalawn.com/blog/playing-with-asyncio>`__ -- blog post by Nathan Hoad"
msgstr ""

#: ../../source/asyncio/index.rst:105
# 4355d5ca9bf0441aa03b5df4befc033b
msgid "`Async I/O and Python <https://blogs.gnome.org/markmc/2013/06/04/async-io-and-python/>`__ -- blog post by Mark McLoughlin"
msgstr ""

#: ../../source/asyncio/index.rst:109
# 3fb996e025ec4a7caa9453e198e421aa
msgid "`A Curious Course on Coroutines and Concurrency <http://www.dabeaz.com/coroutines/>`__ -- PyCon 2009 tutorial by David Beazley"
msgstr ""

#: ../../source/asyncio/index.rst:113
# 944b9095abc9420dac82df3d39221a3b
msgid "`How the heck does async/await work in Python 3.5? <http://www.snarky.ca/how-the-heck-does-async-await-work-in-python-3-5>`__ -- blog post by Brett Cannon"
msgstr ""

#: ../../source/asyncio/index.rst:117
# d67a95f8aa654350a4eb3a00facdd964
msgid "*Unix Network Programming, Volume 1: The Sockets Networking API, 3/E* By W. Richard Stevens, Bill Fenner, and Andrew M. Rudoff. Published by Addison-Wesley Professional, 2004. ISBN-10: 0131411551"
msgstr ""

#: ../../source/asyncio/index.rst:122
# 4c2befcb5f574c8bbfed4428b377ff03
msgid "*Foundations of Python Network Programminng, 3/E* By Brandon Rhodes and John Goerzen. Published by Apress, 2014. ISBN-10: 1430258543"
msgstr ""

