# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, Doug Hellmann
# This file is distributed under the same license as the PyMOTW-3 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyMOTW-3 \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-03-24 20:15-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/pkgutil/index.rst:3
# 5095c3acafa74aa184bd8eef9a9ca0a0
msgid "pkgutil --- Package Utilities"
msgstr ""

#: ../../source/pkgutil/index.rst:8
# 7f9f3f980d854ca7990d6f93bfa9550d
msgid "Add to the module search path for a specific package and work with resources included in a package."
msgstr ""

#: ../../source/pkgutil/index.rst:11
# 35410daea0d1450ba0a9dcde03394370
msgid "The ``pkgutil`` module includes functions for changing the import rules for Python packages and for loading non-code resources from files distributed within a package."
msgstr ""

#: ../../source/pkgutil/index.rst:16
# b1719114e28e4942b0e03227bb894da6
msgid "Package Import Paths"
msgstr ""

#: ../../source/pkgutil/index.rst:18
# 591627f9dc404c7d9de9e784752071e3
msgid "The ``extend_path()`` function is used to modify the search path and change the way sub-modules are imported from within a package so that several different directories can be combined as though they are one. This can be used to override installed versions of packages with development versions, or to combine platform-specific and shared modules into a single package namespace."
msgstr ""

#: ../../source/pkgutil/index.rst:25
# bec56a9a1b8c4dfd9f6c4e1c3e0b9b21
msgid "The most common way to call ``extend_path()`` is by adding two lines to the ``__init__.py`` inside the package."
msgstr ""

#: ../../source/pkgutil/index.rst:33
# b6487b50917d43a996bc3d1644ee26b8
msgid "``extend_path()`` scans ``sys.path`` for directories that include a subdirectory named for the package given as the second argument.  The list of directories is combined with the path value passed as the first argument and returned as a single list, suitable for use as the package import path."
msgstr ""

#: ../../source/pkgutil/index.rst:39
# 4e02518d49184f23a9398719df1a297b
msgid "An example package called :mod:`demopkg` includes two files, ``__init__.py`` and ``shared.py``.  The ``__init__.py`` file in ``demopkg1`` contains ``print`` statements to show the search path before and after it is modified, to highlight the difference."
msgstr ""

#: ../../source/pkgutil/index.rst:0
# 8022fdb4c3924c44b77cd0814468b541
msgid "demopkg1/__init__.py"
msgstr ""

#: ../../source/pkgutil/index.rst:48
# 1fa8118bad554167a745711ec79016e0
msgid "The ``extension`` directory, with add-on features for :mod:`demopkg`, contains three more source files. There is an ``__init__.py`` at each directory level, and a ``not_shared.py``."
msgstr ""

#: ../../source/pkgutil/index.rst:66
# ff5272ddca8a4023b5b2d76925e21217
msgid "This simple test program imports the :mod:`demopkg1` package."
msgstr ""

#: ../../source/pkgutil/index.rst:0
# c8507825360347a2a60e3c5316f0d42b
msgid "pkgutil_extend_path.py"
msgstr ""

#: ../../source/pkgutil/index.rst:72
# d40b702a335e4618a2e58367c662cd16
msgid "When this test program is run directly from the command line, the :mod:`not_shared` module is not found."
msgstr ""

#: ../../source/pkgutil/index.rst:77
# 4edc4c9fac834ff29f7126288fcad7f7
msgid "The full file system paths in these examples have been shortened to emphasize the parts that change."
msgstr ""

#: ../../source/pkgutil/index.rst:101
# 549dcc52324e4cf39ff0db54a6b4a8a8
msgid "However, if the ``extension`` directory is added to the ``PYTHONPATH`` and the program is run again, different results are produced."
msgstr ""

#: ../../source/pkgutil/index.rst:126
# 38d3472bacc74117992dc8c50c1560bf
msgid "The version of :mod:`demopkg1` inside the ``extension`` directory has been added to the search path, so the :mod:`not_shared` module is found there."
msgstr ""

#: ../../source/pkgutil/index.rst:130
# 86a6b8aeedae416c862df40fdc82e6c4
msgid "Extending the path in this manner is useful for combining platform-specific versions of packages with common packages, especially if the platform-specific versions include C extension modules."
msgstr ""

#: ../../source/pkgutil/index.rst:136
# fb26248ec38247c880f9fe1ca844b409
msgid "Development Versions of Packages"
msgstr ""

#: ../../source/pkgutil/index.rst:138
# e71d20dc171e412dacd33b85a2929903
msgid "While developing enhancements to a project, it is common to need to test changes to an installed package. Replacing the installed copy with a development version may be a bad idea, since it is not necessarily correct and other tools on the system are likely to depend on the installed package."
msgstr ""

#: ../../source/pkgutil/index.rst:144
# 73b205ff56ee42f49178714a74a0e656
msgid "A completely separate copy of the package could be configured in a development environment using ``virtualenv`` or :mod:`venv`, but for small modifications the overhead of setting up a virtual environment with all of the dependencies may be excessive."
msgstr ""

#: ../../source/pkgutil/index.rst:149
# 01c86a5c369142f1ac4c2e64257f0bca
msgid "Another option is to use ``pkgutil`` to modify the module search path for modules that belong to the package under development. In this case, however, the path must be reversed so development version overrides the installed version."
msgstr ""

#: ../../source/pkgutil/index.rst:154
# 358ac66afc944b298e978c96c417c715
msgid "Given a package :mod:`demopkg2` containing an ``__init__.py`` and ``overloaded.py``, with the function under development located in ``demopkg2/overloaded.py``. The installed version contains"
msgstr ""

#: ../../source/pkgutil/index.rst:0
# 267ab9ea8d3748b8b0041d26d66413b1
msgid "demopkg2/overloaded.py"
msgstr ""

#: ../../source/pkgutil/index.rst:162
# 1b35a7f3ca5c4b8880506de295cd70d9
msgid "and ``demopkg2/__init__.py`` contains"
msgstr ""

#: ../../source/pkgutil/index.rst:0
# b33b75fe825542019319386c633e93fe
msgid "demopkg2/__init__.py"
msgstr ""

#: ../../source/pkgutil/index.rst:168
# f2b4861d4ddc4bfeaa9779a7c6a0c225
msgid "``reverse()`` is used to ensure that any directories added to the search path by ``pkgutil`` are scanned for imports *before* the default location."
msgstr ""

#: ../../source/pkgutil/index.rst:172
# 7983edbd163a482f8e143c9db4f36d60
msgid "This program imports :mod:`demopkg2.overloaded` and calls ``func()``."
msgstr ""

#: ../../source/pkgutil/index.rst:0
# f50aa2decf494f7b81fcbf7013a93ffb
msgid "pkgutil_devel.py"
msgstr ""

#: ../../source/pkgutil/index.rst:178
# 4617beb36d6d4bebb74fdaa143f12c9e
msgid "Running it without any special path treatment produces output from the installed version of ``func()``."
msgstr ""

#: ../../source/pkgutil/index.rst:196
# 2c187e11376647a2b2eefd26d71f8270
msgid "A development directory containing"
msgstr ""

#: ../../source/pkgutil/index.rst:211
# 9c11a160c3424364bb0b80805f4f5870
msgid "and a modified version of :mod:`overloaded`"
msgstr ""

#: ../../source/pkgutil/index.rst:0
# a87692f2f7f44e5fa9c331462c829e69
msgid "develop/demopkg2/overloaded.py"
msgstr ""

#: ../../source/pkgutil/index.rst:217
# 11a91f348b284da29fe911af9a6e258a
msgid "will be loaded when the test program is run with the ``develop`` directory in the search path."
msgstr ""

#: ../../source/pkgutil/index.rst:236
# 64fba284fd074231acb93961754e72e8
msgid "Managing Paths with PKG Files"
msgstr ""

#: ../../source/pkgutil/index.rst:238
# db40554ddfe14c109f61f26ac244543f
msgid "The first example illustrated how to extend the search path using extra directories included in the ``PYTHONPATH``. It is also possible to add to the search path using ``*.pkg`` files containing directory names. PKG files are similar to the PTH files used by the :mod:`site` module. They can contain directory names, one per line, to be added to the search path for the package."
msgstr ""

#: ../../source/pkgutil/index.rst:245
# 7b84575aebde4917b90fa588c908f48e
msgid "Another way to structure the platform-specific portions of the application from the first example is to use a separate directory for each operating system, and include a ``.pkg`` file to extend the search path."
msgstr ""

#: ../../source/pkgutil/index.rst:250
# 5944c995bc90478f88b13c749df44be2
msgid "This example uses the same :mod:`demopkg1` files, and also includes the following files."
msgstr ""

#: ../../source/pkgutil/index.rst:271
# 452f15495c294429b29897d232b10b18
msgid "The PKG files are named ``demopkg1.pkg`` to match the package being extended.  They both contain one line."
msgstr ""

#: ../../source/pkgutil/index.rst:278
# 1f6485c0c92a4018a3344f6abaa8bc91
msgid "This demo program shows the version of the module being imported."
msgstr ""

#: ../../source/pkgutil/index.rst:0
# a983e9b209ae43729c3a1acbc40c9cd8
msgid "pkgutil_os_specific.py"
msgstr ""

#: ../../source/pkgutil/index.rst:284
# 44dfe1f2acc14fae8ac84f1e6d4d278a
msgid "A simple wrapper script can be used to switch between the two packages."
msgstr ""

#: ../../source/pkgutil/index.rst:0
# 78d1321e711d44a2be4ae3e62afc963b
msgid "with_os.sh"
msgstr ""

#: ../../source/pkgutil/index.rst:291
# 9a22054e86ea472bb3b315e5387468c7
msgid "When run with ``\"one\"`` or ``\"two\"`` as the arguments, the path is adjusted."
msgstr ""

#: ../../source/pkgutil/index.rst:335
# 745c3e3e559a41dd9fd4ead1b62e7075
msgid "PKG files can appear anywhere in the normal search path, so a single PKG file in the current working directory could also be used to include a development tree."
msgstr ""

#: ../../source/pkgutil/index.rst:340
# 8046715f81a44b05b93ea0a36a67f2b9
msgid "Nested Packages"
msgstr ""

#: ../../source/pkgutil/index.rst:342
# 37e24d24779647d498a15cef299a8cfe
msgid "For nested packages, it is only necessary to modify the path of the top-level package. For example, with this directory structure"
msgstr ""

#: ../../source/pkgutil/index.rst:360
# 0b471d742cb647afa4d15fac017a0f23
msgid "Where ``nested/__init__.py`` contains"
msgstr ""

#: ../../source/pkgutil/index.rst:0
# 05183b1c13594415a52d4aa2c3c63950
msgid "nested/__init__.py"
msgstr ""

#: ../../source/pkgutil/index.rst:366
# d47b9f39f80849cf9fb294e44bee8a5a
msgid "and a development tree like"
msgstr ""

#: ../../source/pkgutil/index.rst:383
# 0d0124a23c8a484a8a99c68972360744
msgid "Both the :mod:`shallow` and :mod:`deep` modules contain a simple function to print out a message indicating whether or not they come from the installed or development version."
msgstr ""

#: ../../source/pkgutil/index.rst:387
# 7d41fcac13944ad59816569aeb062af8
msgid "This test program exercises the new packages."
msgstr ""

#: ../../source/pkgutil/index.rst:0
# 83bcb79fe4f048b8a86c64975831ef71
msgid "pkgutil_nested.py"
msgstr ""

#: ../../source/pkgutil/index.rst:393
# fd942c18c2694ebfb2f5cf0b0eb935b9
msgid "When ``pkgutil_nested.py`` is run without any path manipulation, the installed version of both modules are used."
msgstr ""

#: ../../source/pkgutil/index.rst:413
# d114917e4beb4e7da44423f69be63461
msgid "When the ``develop`` directory is added to the path, the development version of both functions override the installed versions."
msgstr ""

#: ../../source/pkgutil/index.rst:434
# a65e55f0a4c54e428e955644d0e30786
msgid "Package Data"
msgstr ""

#: ../../source/pkgutil/index.rst:436
# c57812ff0139489eafc1d073b4eeacc3
msgid "In addition to code, Python packages can contain data files such as templates, default configuration files, images, and other supporting files used by the code in the package.  The ``get_data()`` function gives access to the data in the files in a format-agnostic way, so it does not matter if the package is distributed as an EGG, part of a frozen binary, or regular files on the file system."
msgstr ""

#: ../../source/pkgutil/index.rst:443
# 5d57891712db411c89f26a6802522878
msgid "With a package :mod:`pkgwithdata` containing a ``templates`` directory"
msgstr ""

#: ../../source/pkgutil/index.rst:458
# a0dcb93ccdc64a3b97d94d9cc94e45a3
msgid "The file ``pkgwithdata/templates/base.html`` contains a simple HTML template."
msgstr ""

#: ../../source/pkgutil/index.rst:0
# 00e171d10ac347fbb73dc06b5ee89514
msgid "pkgwithdata/templates/base.html"
msgstr ""

#: ../../source/pkgutil/index.rst:465
# 0088785b3525472ea9d9f134f82af1fb
msgid "This program uses ``get_data()`` to retrieve the template contents and print them out."
msgstr ""

#: ../../source/pkgutil/index.rst:0
# 8a5ee60d17784a7cbe31c3ecbe920578
msgid "pkgutil_get_data.py"
msgstr ""

#: ../../source/pkgutil/index.rst:472
# 3fc210954625454584cb3bed8ca4aa4d
msgid "The arguments to ``get_data()`` are the dotted name of the package, and a filename relative to the top of the package.  The return value is a byte sequence, so it is decoded from UTF-8 before being printed."
msgstr ""

#: ../../source/pkgutil/index.rst:499
# ec2b9b3c49c84f578bb63b7cf059732c
msgid "``get_data()`` is distribution format-agnostic because it uses the import hooks defined in PEP 302 to access the package contents. Any loader that provides the hooks can be used, including the ZIP archive importer in :mod:`zipfile`."
msgstr ""

#: ../../source/pkgutil/index.rst:0
# 5ed7f562baab4181974462ed4f49875a
msgid "pkgutil_get_data_zip.py"
msgstr ""

#: ../../source/pkgutil/index.rst:508
# 577efb106d254ab7af72baec61d89659
msgid "This example uses ``PyZipFile.writepy()`` to create a ZIP archive containing a copy of the :mod:`pkgwithdata` package, including a renamed version of the template file.  It then adds the ZIP archive to the import path before using ``pkgutil`` to load the template and print it.  Refer to the discussion of :mod:`zipfile` for more details about using ``writepy()``."
msgstr ""

#: ../../source/pkgutil/index.rst:545
# de7c120edb534fb092c5ae133ed060ae
msgid ":pydoc:`pkgutil`"
msgstr ""

#: ../../source/pkgutil/index.rst:547
# 70ad07b3667b4a7198ebc7b0b3669683
msgid "`virtualenv`_ -- Ian Bicking's virtual environment script."
msgstr ""

#: ../../source/pkgutil/index.rst:549
# 7c97beb924e84d32bcc08220b4bca925
msgid ":mod:`distutils` -- Packaging tools from Python standard library."
msgstr ""

#: ../../source/pkgutil/index.rst:551
# dd56ec3b37ca4403b165458db96336dc
msgid "`setuptools`_ -- Next-generation packaging tools."
msgstr ""

#: ../../source/pkgutil/index.rst:553
# 1cf9e1f0baf6466f9532e4b459c51592
msgid ":pep:`302` -- Import Hooks"
msgstr ""

#: ../../source/pkgutil/index.rst:555
# 88d692b1085b48ec8d99688b407d1790
msgid ":mod:`zipfile` -- Create importable ZIP archives."
msgstr ""

#: ../../source/pkgutil/index.rst:557
# 28c88a8b6ccc4a7cb495df6ab35899b6
msgid ":mod:`zipimport` -- Importer for packages in ZIP archives."
msgstr ""

